/*
 * Tusk Logistics API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: devsupport@tusklogistics.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;

namespace Tusk.Model
{
    /// <summary>
    /// Manifest
    /// </summary>
    [DataContract(Name = "Manifest")]
    public partial class Manifest : BaseModel
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Manifest" /> class.
        /// </summary>
        /// <param name="manifestId">The identifier of this Manifest..</param>
        /// <param name="addressFrom">addressFrom.</param>
        /// <param name="labels">labels.</param>
        /// <param name="manifestDocument">Base 64 string of the Manifest document in PDF format..</param>
        public Manifest(int manifestId = default(int), Address addressFrom = default(Address), List<ManifestLabel> labels = default(List<ManifestLabel>), string manifestDocument = default(string))
        {
            this.ManifestId = manifestId;
            this.AddressFrom = addressFrom;
            this.Labels = labels;
            this.ManifestDocument = manifestDocument;
        }

        /// <summary>
        /// The identifier of this Manifest.
        /// </summary>
        /// <value>The identifier of this Manifest.</value>
        [DataMember(Name = "manifest_id", EmitDefaultValue = false)]
        public int ManifestId { get; set; }

        /// <summary>
        /// Gets or Sets AddressFrom
        /// </summary>
        [DataMember(Name = "address_from", EmitDefaultValue = false)]
        public Address AddressFrom { get; set; }

        /// <summary>
        /// Gets or Sets Labels
        /// </summary>
        [DataMember(Name = "labels", EmitDefaultValue = false)]
        public List<ManifestLabel> Labels { get; set; }

        /// <summary>
        /// Base 64 string of the Manifest document in PDF format.
        /// </summary>
        /// <value>Base 64 string of the Manifest document in PDF format.</value>
        [DataMember(Name = "manifest_document", EmitDefaultValue = false)]
        public string ManifestDocument { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Manifest {\n");
            sb.Append("  ManifestId: ").Append(ManifestId).Append("\n");
            sb.Append("  AddressFrom: ").Append(AddressFrom).Append("\n");
            sb.Append("  Labels: ").Append(Labels).Append("\n");
            sb.Append("  ManifestDocument: ").Append(ManifestDocument).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
    }

}
