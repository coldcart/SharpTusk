/*
 * Tusk Logistics API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: devsupport@tusklogistics.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System.Runtime.Serialization;
using System.Text;
using System.Text.Json.Serialization;

namespace Tusk.Model
{
    /// <summary>
    /// Label
    /// </summary>
    [DataContract(Name = "Label")]
    public partial class Label : BaseModel
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Label" /> class.
        /// </summary>
        [JsonConstructor]
        public Label() { }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="Label" /> class.
        /// </summary>
        /// <param name="id">ID of the Label..</param>
        /// <param name="shipmentId">The Shipment which is shipped by this Label..</param>
        /// <param name="rateId">The Rate which was used to create this Label..</param>
        /// <param name="labelUrl">URL to fetch the Label to print..</param>
        /// <param name="cost">Purchase price of the Label..</param>
        /// <param name="trackingUrl">URL to a tracking page for this Label..</param>
        /// <param name="labelFormat">Format of labels to be returned from this purchase. Options are: PDF4X5, ZPL4X5. Defaults to PDF4X5 if not specified..</param>
        public Label(int id = default(int), int shipmentId = default(int), int rateId = default(int), string labelUrl = default(string), decimal cost = default(decimal), string trackingUrl = default(string), string labelFormat = default(string))
        {
            this.Id = id;
            this.ShipmentId = shipmentId;
            this.RateId = rateId;
            this.LabelUrl = labelUrl;
            this.Cost = cost;
            this.TrackingUrl = trackingUrl;
            this.LabelFormat = labelFormat;
        }

        /// <summary>
        /// ID of the Label.
        /// </summary>
        /// <value>ID of the Label.</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// The Shipment which is shipped by this Label.
        /// </summary>
        /// <value>The Shipment which is shipped by this Label.</value>
        [DataMember(Name = "shipment_id", EmitDefaultValue = false)]
        public int ShipmentId { get; set; }

        /// <summary>
        /// The Rate which was used to create this Label.
        /// </summary>
        /// <value>The Rate which was used to create this Label.</value>
        [DataMember(Name = "rate_id", EmitDefaultValue = false)]
        public int RateId { get; set; }

        /// <summary>
        /// URL to fetch the Label to print.
        /// </summary>
        /// <value>URL to fetch the Label to print.</value>
        [DataMember(Name = "label_url", EmitDefaultValue = false)]
        public string? LabelUrl { get; set; }

        /// <summary>
        /// Purchase price of the Label.
        /// </summary>
        /// <value>Purchase price of the Label.</value>
        [DataMember(Name = "cost", EmitDefaultValue = false)]
        public decimal Cost { get; set; }

        /// <summary>
        /// URL to a tracking page for this Label.
        /// </summary>
        /// <value>URL to a tracking page for this Label.</value>
        [DataMember(Name = "tracking_url", EmitDefaultValue = false)]
        public string? TrackingUrl { get; set; }

        /// <summary>
        /// Format of labels to be returned from this purchase. Options are: PDF4X5, ZPL4X5. Defaults to PDF4X5 if not specified.
        /// </summary>
        /// <value>Format of labels to be returned from this purchase. Options are: PDF4X5, ZPL4X5. Defaults to PDF4X5 if not specified.</value>
        [DataMember(Name = "label_format", EmitDefaultValue = false)]
        public string? LabelFormat { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Label {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  ShipmentId: ").Append(ShipmentId).Append("\n");
            sb.Append("  RateId: ").Append(RateId).Append("\n");
            sb.Append("  LabelUrl: ").Append(LabelUrl).Append("\n");
            sb.Append("  Cost: ").Append(Cost).Append("\n");
            sb.Append("  TrackingUrl: ").Append(TrackingUrl).Append("\n");
            sb.Append("  LabelFormat: ").Append(LabelFormat).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
    }

}
