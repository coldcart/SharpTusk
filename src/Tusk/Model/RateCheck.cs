/*
 * Tusk Logistics API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: devsupport@tusklogistics.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System.Runtime.Serialization;
using System.Text;

namespace Tusk.Model
{
    /// <summary>
    /// RateCheck
    /// </summary>
    [DataContract(Name = "RateCheck")]
    public partial class RateCheck : BaseModel
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RateCheck" /> class.
        /// </summary>
        /// <param name="cost">Cost to purchase a Label for this Rate..</param>
        /// <param name="service">Service level name for this Rate..</param>
        /// <param name="delivery">delivery.</param>
        public RateCheck(decimal cost = default(decimal), string service = default(string), Delivery delivery = default(Delivery))
        {
            this.Cost = cost;
            this.Service = service;
            this.Delivery = delivery;
        }

        /// <summary>
        /// Cost to purchase a Label for this Rate.
        /// </summary>
        /// <value>Cost to purchase a Label for this Rate.</value>
        [DataMember(Name = "cost", EmitDefaultValue = false)]
        public decimal Cost { get; set; }

        /// <summary>
        /// Service level name for this Rate.
        /// </summary>
        /// <value>Service level name for this Rate.</value>
        [DataMember(Name = "service", EmitDefaultValue = false)]
        public string Service { get; set; }

        /// <summary>
        /// Gets or Sets Delivery
        /// </summary>
        [DataMember(Name = "delivery", EmitDefaultValue = false)]
        public Delivery Delivery { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RateCheck {\n");
            sb.Append("  Cost: ").Append(Cost).Append("\n");
            sb.Append("  Service: ").Append(Service).Append("\n");
            sb.Append("  Delivery: ").Append(Delivery).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
    }

}
