/*
 * Tusk Logistics API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: devsupport@tusklogistics.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Text.Json.Serialization;

namespace Tusk.Model
{
    /// <summary>
    /// Delivery
    /// </summary>
    [DataContract(Name = "Delivery")]
    public partial class Delivery : BaseModel
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Delivery" /> class.
        /// </summary>
        /// <param name="serviceShipSpeedDays">Shipping speed, in days, of the service. For example, next-day service will be 1. Two-day service will be 2..</param>
        /// <param name="estimatedTimeInTransitDays">Number of calendar days it is expected to take for the parcel to reach its destination, once the carrier has taken possession of it..</param>
        /// <param name="estimatedDeliveryDate">Estimated delivery date, in the timezone of delivery. This will be null if no ship_date provided in the request..</param>
        /// <param name="notes">Notes about the delivery service..</param>
        public Delivery(decimal serviceShipSpeedDays = default(decimal), decimal estimatedTimeInTransitDays = default(decimal), string estimatedDeliveryDate = default(string), List<string> notes = default(List<string>))
        {
            this.ServiceShipSpeedDays = serviceShipSpeedDays;
            this.EstimatedTimeInTransitDays = estimatedTimeInTransitDays;
            this.EstimatedDeliveryDate = estimatedDeliveryDate;
            this.Notes = notes;
        }

        /// <summary>
        /// Shipping speed, in days, of the service. For example, next-day service will be 1. Two-day service will be 2.
        /// </summary>
        /// <value>Shipping speed, in days, of the service. For example, next-day service will be 1. Two-day service will be 2.</value>
        [DataMember(Name = "service_ship_speed_days", EmitDefaultValue = false)]
        [JsonPropertyName("service_ship_speed_days")]
        public decimal ServiceShipSpeedDays { get; set; }

        /// <summary>
        /// Number of calendar days it is expected to take for the parcel to reach its destination, once the carrier has taken possession of it.
        /// </summary>
        /// <value>Number of calendar days it is expected to take for the parcel to reach its destination, once the carrier has taken possession of it.</value>
        [DataMember(Name = "estimated_time_in_transit_days", EmitDefaultValue = false)]
        [JsonPropertyName("estimated_time_in_transit_days")]
        public decimal EstimatedTimeInTransitDays { get; set; }

        /// <summary>
        /// Estimated delivery date, in the timezone of delivery. This will be null if no ship_date provided in the request.
        /// </summary>
        /// <value>Estimated delivery date, in the timezone of delivery. This will be null if no ship_date provided in the request.</value>
        [DataMember(Name = "estimated_delivery_date", EmitDefaultValue = false)]
        [JsonPropertyName("estimated_delivery_date")]
        public string EstimatedDeliveryDate { get; set; }

        /// <summary>
        /// Notes about the delivery service.
        /// </summary>
        /// <value>Notes about the delivery service.</value>
        [DataMember(Name = "notes", EmitDefaultValue = false)]
        [JsonPropertyName("notes")]
        public List<string> Notes { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Delivery {\n");
            sb.Append("  ServiceShipSpeedDays: ").Append(ServiceShipSpeedDays).Append("\n");
            sb.Append("  EstimatedTimeInTransitDays: ").Append(EstimatedTimeInTransitDays).Append("\n");
            sb.Append("  EstimatedDeliveryDate: ").Append(EstimatedDeliveryDate).Append("\n");
            sb.Append("  Notes: ").Append(Notes).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
    }

}
