/*
 * Tusk Logistics API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: devsupport@tusklogistics.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System.Runtime.Serialization;
using System.Text;

namespace Tusk.Model
{
    /// <summary>
    /// ManifestException
    /// </summary>
    [DataContract(Name = "ManifestException")]
    public partial class ManifestException : BaseModel
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ManifestException" /> class.
        /// </summary>
        /// <param name="labelId">Id of the label not added to manifest..</param>
        /// <param name="exceptionMessage">Unable to add label to manifest reason..</param>
        public ManifestException(int labelId = default(int), string exceptionMessage = default(string))
        {
            this.LabelId = labelId;
            this.ExceptionMessage = exceptionMessage;
        }

        /// <summary>
        /// Id of the label not added to manifest.
        /// </summary>
        /// <value>Id of the label not added to manifest.</value>
        [DataMember(Name = "label_id", EmitDefaultValue = false)]
        public int LabelId { get; set; }

        /// <summary>
        /// Unable to add label to manifest reason.
        /// </summary>
        /// <value>Unable to add label to manifest reason.</value>
        [DataMember(Name = "exception_message", EmitDefaultValue = false)]
        public string ExceptionMessage { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ManifestException {\n");
            sb.Append("  LabelId: ").Append(LabelId).Append("\n");
            sb.Append("  ExceptionMessage: ").Append(ExceptionMessage).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
    }

}
